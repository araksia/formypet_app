default_platform :ios

platform :ios do
  desc "Build & upload to TestFlight"
  lane :release do
    create_keychain(
      name: "ci",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      password: ENV["KEYCHAIN_PASSWORD"]
    )

    api_key = app_store_connect_api_key(
      key_id:      ENV.fetch('APP_STORE_CONNECT_API_KEY_ID'),
      issuer_id:   ENV.fetch('APP_STORE_CONNECT_API_ISSUER_ID'),
      key_content: ENV.fetch('APP_STORE_CONNECT_API_KEY_CONTENT')
    )

    match(
      type: "appstore",
      readonly: true,
      storage_mode: "git",
      git_url: ENV.fetch('MATCH_GIT_URL'),
      git_branch: (ENV['MATCH_GIT_BRANCH'] || 'main'),
      app_identifier: ENV.fetch('APP_BUNDLE_ID'),
      team_id: ENV.fetch('APPLE_TEAM_ID'),
      keychain_name: "ci",
      keychain_password: ENV.fetch('MATCH_KEYCHAIN_PASSWORD'),
      api_key: api_key
    )

    increment_build_number(build_number: ENV['BUILD_NUMBER'])

    # Xcode pin
    xcode_select("/Applications/Xcode_16.2.app")

    # ---- ΣΗΜΑΝΤΙΚΟ: ΡΗΤΑ signing flags για ΟΛΑ τα targets ----
    signing_args = %W[
      -allowProvisioningUpdates
      CODE_SIGN_STYLE=Manual
      DEVELOPMENT_TEAM=#{ENV.fetch('APPLE_TEAM_ID')}
      PROVISIONING_PROFILE_SPECIFIER=match\ AppStore\ #{ENV.fetch('APP_BUNDLE_ID')}
      CODE_SIGN_IDENTITY=Apple\ Distribution
      ONLY_ACTIVE_ARCH=NO
      ENABLE_USER_SCRIPT_SANDBOXING=NO
    ].join(' ')

    gym(
      workspace: "App.xcworkspace",
      scheme: "App",
      configuration: "Release",
      clean: true,
      sdk: "iphoneos",
      export_method: "app-store",
      output_directory: "build",
      output_name: "App-#{Time.now.strftime('%Y%m%d')}.ipa",
      include_symbols: true,
      include_bitcode: false,
      xcargs: signing_args,
      export_options: {
        signingStyle: "manual",
        provisioningProfiles: {
          "gr.formypet.app" => "match AppStore gr.formypet.app"
        }
      },
      silent: false
    )

    # Safety check
    sh <<~BASH
      IPA=$(ls -t build/*.ipa | head -n1)
      TMP=$(mktemp -d); unzip -q "$IPA" -d "$TMP"
      APP_PATH=$(find "$TMP/Payload" -name "*.app" -maxdepth 1 | head -n1)
      /usr/bin/codesign -d --entitlements :- "$APP_PATH" > entitlements.plist
      /usr/libexec/PlistBuddy -c "Print :aps-environment" entitlements.plist
    BASH

    pilot(
      api_key: api_key,
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )
  end
end
