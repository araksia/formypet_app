lane :release do
  api_key = app_store_connect_api_key(
    key_id:      ENV.fetch('APP_STORE_CONNECT_API_KEY_ID'),
    issuer_id:   ENV.fetch('APP_STORE_CONNECT_API_ISSUER_ID'),
    key_content: ENV.fetch('APP_STORE_CONNECT_API_KEY_CONTENT')
  )

  increment_build_number(build_number: ENV['BUILD_NUMBER'])

  create_keychain(
    name: "build.keychain",
    password: ENV['KEYCHAIN_PASSWORD'],
    default_keychain: true,
    unlock: true,
    timeout: 3600,
    lock_when_sleeps: true
  )

  match(
    type: "appstore",
    readonly: true,
    git_url: ENV['MATCH_GIT_URL'],
    git_branch: ENV['MATCH_GIT_BRANCH'],
    app_identifier: ENV['APP_BUNDLE_ID'],
    team_id: ENV['APPLE_TEAM_ID'],
    keychain_name: "build.keychain",
    keychain_password: ENV['KEYCHAIN_PASSWORD']
  )

	gym(
	  scheme: "App",
	  workspace: "App.xcworkspace",
	  configuration: "Release",
	  clean: true,
	  export_method: "app-store",
	  # για να βλέπουμε raw xcodebuild και να κρατάει logs τοπικά στο repo
	  disable_xcpretty: true,
	  buildlog_path: "./fastlane/build_logs"
	)

  # Πάρε το path του IPA από το gym και κράτα το σίγουρα στο ios/App/build
  ipa_path = Actions.lane_context[SharedValues::IPA_OUTPUT_PATH]
  sh "mkdir -p build && cp \"#{ipa_path}\" build/"

  upload_to_testflight(
    api_key: api_key,
    app_identifier: ENV['APP_BUNDLE_ID'],
    skip_waiting_for_build_processing: true
  )

  # ❌ ΜΗΝ βάλεις clean_build_artifacts εδώ, αλλιώς θα σβήσει το IPA
end
