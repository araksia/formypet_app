default_platform :ios

platform :ios do
  desc "Build & upload to TestFlight"
  lane :release do
    # CI-friendly keychain
    create_keychain(
      name: "ci",
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      password: ENV["KEYCHAIN_PASSWORD"]
    )

    # App Store Connect API Key (Secrets: ID/Issuer/Base64 key)
    api_key = app_store_connect_api_key(
    key_id:      ENV.fetch('APP_STORE_CONNECT_API_KEY_ID'),
    issuer_id:   ENV.fetch('APP_STORE_CONNECT_API_ISSUER_ID'),
    key_content: ENV.fetch('APP_STORE_CONNECT_API_KEY_CONTENT')
  )

    # Certificates & Provisioning (match repo)
    match(
      type: "appstore",
      git_url: ENV["MATCH_GIT_URL"],
      git_branch: ENV["MATCH_GIT_BRANCH"] || "main",
      readonly: true,
      app_identifier: ENV["APP_BUNDLE_ID"],
      team_id: ENV["APPLE_TEAM_ID"],
      keychain_name: "ci",
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"]
    )

    # Αυξάνουμε build number από το CI run_number
    increment_build_number(build_number: ENV["BUILD_NUMBER"])

    # Build
    gym(
      workspace: "App.xcworkspace",
      scheme: "App",
      configuration: "Release",
      clean: true,
      export_method: "app-store",
      output_directory: "build",
      output_name: "App-#{Time.now.strftime('%Y%m%d')}.ipa",
      include_symbols: true,
      include_bitcode: false,
      silent: false
    )

    # Safety: fail αν λείπει το aps-environment στον υπογεγραμμένο .app
    sh <<~BASH
      set -e
      IPA=$(ls -t build/*.ipa | head -n1)
      echo "Inspecting $IPA"
      TMP=$(mktemp -d); unzip -q "$IPA" -d "$TMP"
      APP_PATH=$(find "$TMP/Payload" -name "*.app" -maxdepth 1 | head -n1)
      /usr/bin/codesign -d --entitlements :- "$APP_PATH" > entitlements.plist
      /usr/libexec/PlistBuddy -c "Print :aps-environment" entitlements.plist
    BASH

    # Upload στο TestFlight
    pilot(
      api_key: api_key,
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )
  end
end