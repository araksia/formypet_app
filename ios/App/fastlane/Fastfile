require 'base64'
default_platform(:ios)

platform :ios do
  desc "Build and upload to TestFlight"
  lane :release do
    app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'],
      is_key_content_base64: false # ή true αν περάσεις base64
    )

  # Προσωρινές γραμμές για debugging - ΑΦΑΙΡΕΣΤΕ ΤΕΣ ΜΕΤΑ ΤΟ DEBUGGING
    puts "DEBUG: MATCH_GIT_URL: #{ENV["MATCH_GIT_URL"]}"
    puts "DEBUG: MATCH_GIT_TOKEN (raw): #{ENV["MATCH_GIT_TOKEN"]}"
    puts "DEBUG: GITHUB_USERNAME (raw): #{ENV["TGITHUB_USERNAME"]}"
    puts "DEBUG: git_basic_authorization string: #{ENV["GITHUB_USERNAME"]}:#{ENV["MATCH_GIT_TOKEN"]}"
    puts "DEBUG: git_basic_authorization Base64: #{Base64.strict_encode64("#{ENV["GITHUB_USERNAME"]}:#{ENV["MATCH_GIT_TOKEN"]}")}"
    # Τέλος προσωρινών γραμμών debugging
	
	match(
	  type: "appstore",
	  readonly: true,                 # στο CI είναι καλύτερα read-only
	  storage_mode: "git",
	  git_url: ENV["MATCH_GIT_URL"],
	  git_branch: "master",             # βάλε "master" αν το repo σου έχει master
      git_basic_authorization: Base64.strict_encode64("#{ENV["TGITHUB_USERNAME"]}:#{ENV["MATCH_GIT_TOKEN"]}"),
	  team_id: ENV["APPLE_TEAM_ID"],
	  keychain_password: ENV["KEYCHAIN_PASSWORD"],
	  keychain_name: "build.keychain"
	)

    update_project_team(teamid: ENV["APPLE_TEAM_ID"])

    gym(
      scheme: "App",
      export_method: "app-store"
      # workspace: "App.xcworkspace"  # αν χρειαστεί ρητά
    )

    upload_to_testflight(
      app_identifier: ENV['APPLE_APP_ID'],
      skip_waiting_for_build_processing: true
    )
  end
end
