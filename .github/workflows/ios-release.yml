name: Build iOS (Unsigned)

on:
  workflow_dispatch: {}
  push:
    tags:
      - ios-v*

jobs:
  ios:
    runs-on: macos-14
    defaults:
      run:
        shell: bash
    env:
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      APP_BUNDLE_ID: gr.formypet.app
      BUILD_NUMBER: ${{ github.run_number }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Xcode 16
      - name: Select Xcode 16
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.*'

      - name: Show selected Xcode / SDK
        run: |
          xcodebuild -version
          xcrun --sdk iphoneos --show-sdk-version

      # 3) Node / build web assets
      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Configure npm auth (optional)
        run: |
          if [ -n "${NPM_TOKEN:-}" ]; then
            npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
          fi
          npm config set audit false
          npm config set fund false

      - name: Install JS dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          elif [ -f yarn.lock ]; then
            corepack enable
            yarn install --frozen-lockfile
          else
            npm install
          fi

      - name: Build web assets (create ./dist)
        run: npm run build

      # 4) Ruby & Bundler
      - name: Set up Ruby 3.3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: false

      - name: Install gems for iOS (cocoapods)
        working-directory: ios/App
        run: |
          set -e
          bundle config set path vendor/bundle
          bundle install --jobs 4 --retry 3

      # 5) Capacitor sync ΧΩΡΙΣ pods (pods μετά)
      - name: Sync Capacitor iOS (skip pods)
        env:
          CAPACITOR_SKIP_POD_INSTALL: '1'
        run: npx cap sync ios

      # 6) Firebase plist από secrets (αν χρειάζεται)
      - name: Write GoogleService-Info.plist
        run: |
          set -e
          mkdir -p ios/App/App
          echo "$FIREBASE_IOS_PLIST_BASE64" | base64 --decode > ios/App/App/GoogleService-Info.plist
          /usr/bin/plutil -lint ios/App/App/GoogleService-Info.plist
        env:
          FIREBASE_IOS_PLIST_BASE64: ${{ secrets.FIREBASE_IOS_PLIST_BASE64 }}

      # 7) CocoaPods
      - name: CocoaPods install
        working-directory: ios/App
        run: |
          set -e
          bundle exec pod repo update
          bundle exec pod install --repo-update

      # 8) (προαιρετικό) Δείξε schemes / build settings
      - name: Show schemes & build settings
        run: |
          xcodebuild -list -workspace ios/App/App.xcworkspace
          xcodebuild -showBuildSettings -workspace ios/App/App.xcworkspace -scheme App -configuration Release | egrep 'INFOPLIST_FILE|PRODUCT_BUNDLE_IDENTIFIER|DEVELOPMENT_TEAM|CODE_SIGN_STYLE|PROVISIONING_PROFILE_SPECIFIER' || true

      # 9) Build μόνο (unsigned), χωρίς TestFlight
      - name: Build (archive) unsigned
        run: |
          set -e
          xcodebuild \
            -workspace ios/App/App.xcworkspace \
            -scheme App \
            -configuration Release \
            -destination "generic/platform=iOS" \
            -archivePath ios/App/build/App.xcarchive \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO \
            clean archive

          APP_DIR="ios/App/build/App.xcarchive/Products/Applications"
          APP_PATH=$(find "$APP_DIR" -maxdepth 1 -name "*.app" -print -quit)
          if [ -z "$APP_PATH" ]; then
            echo "❌ .app not found"; exit 1; fi
          echo "✅ Built: $APP_PATH"

          (cd "$APP_DIR" && zip -qry ../../App-unsigned.zip "$(basename "$APP_PATH")")

      # 10) Artifacts / logs
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: |
            ios/App/build/App.xcarchive/**
            ios/App/build/App-unsigned.zip
            ~/Library/Developer/Xcode/DerivedData/**/Logs/**
