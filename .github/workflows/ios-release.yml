name: iOS Release (Capacitor + Fastlane)

on:
  workflow_dispatch:
    inputs:
      build_number:
        description: "Override BUILD_NUMBER (optional)"
        required: false
  push:
    branches:
      - main

concurrency:
  group: ios-release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  ios-build:
    runs-on: macos-15

    env:
      # ---- Required by your Fastlane lane ----
      APP_BUNDLE_ID: gr.formypet.app
      BUILD_NUMBER: ${{ inputs.build_number || '237' }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_GIT_BRANCH: main
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      # App Store Connect API Key (RAW .p8 περιεχόμενο – ΟΧΙ base64)
      APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
      APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

      # Optional
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}

      # Xcode
      MD_APPLE_SDK_ROOT: /Applications/Xcode_16.2.app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Προαιρετικό) SSH agent για ιδιωτικό match repo μέσω SSH
      # - name: Setup SSH for match
      #   if: ${{ secrets.MATCH_SSH_PRIVATE_KEY != '' }}
      #   uses: webfactory/ssh-agent@v0.9.0
      #   with:
      #     ssh-private-key: ${{ secrets.MATCH_SSH_PRIVATE_KEY }}
      - name: Select Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Xcode 16.2
        uses: apple-actions/setup-xcode@v2
        with:
          xcode-version: "16.2"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: false

      - name: Print tool versions
        run: |
          node -v
          npm -v
          ruby -v
          gem -v
          xcodebuild -version

      - name: Setup .npmrc (if NPM_TOKEN)
        if: ${{ env.NPM_TOKEN != '' }}
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: Install JS deps
        run: npm ci

      - name: Build web assets
        run: npm run build

      - name: Write GoogleService-Info.plist (from secret)
        if: ${{ env.GOOGLE_SERVICE_INFO_PLIST != '' }}
        run: |
          set -euo pipefail
          mkdir -p ios/App/App ios/App/App/App

          CONTENT="${GOOGLE_SERVICE_INFO_PLIST}"

          # Αν είναι raw XML/JSON, γράψ' το αυτούσιο, αλλιώς κάνε base64 decode
          if echo "$CONTENT" | head -n1 | grep -Eqi '^\s*<\?xml|^\s*\{'; then
            printf "%s" "$CONTENT" > ios/App/App/GoogleService-Info.plist
          else
            printf "%s" "$CONTENT" | base64 --decode > ios/App/App/GoogleService-Info.plist || \
            printf "%s" "$CONTENT" | base64 -d        > ios/App/App/GoogleService-Info.plist
          fi

          # Κάποια Xcode projects το ζητούν από nested App/App/App (ασφάλεια)
          cp ios/App/App/GoogleService-Info.plist ios/App/App/App/GoogleService-Info.plist

          /usr/bin/plutil -lint ios/App/App/GoogleService-Info.plist || true

      - name: Capacitor sync iOS
        run: npx cap sync ios

      # CocoaPods μέσω Bundler (αν υπάρχει Gemfile μέσα στο ios/App)
      - name: Install CocoaPods (Bundler or gem)
        working-directory: ios/App
        run: |
          set -euo pipefail
          if [ -f Gemfile ]; then
            # Λύνει το "Your bundle only supports platforms [...]"
            bundle lock --add-platform arm64-darwin-23 x86_64-darwin-23 ruby || true
            bundle install --path vendor/bundle --jobs 4
            bundle exec pod repo update
            bundle exec pod install --repo-update
          else
            gem install cocoapods -N
            pod repo update
            pod install --repo-update
          fi

      - name: Fastlane release
        working-directory: ios/App
        run: |
          set -e
          if [ -f Gemfile ]; then
            bundle exec fastlane release
          else
            fastlane release
          fi

      # Τρέχει μόνο αν το build πέτυχε
      - name: Inspect built IPA (only on success)
        if: ${{ success() }}
        run: |
          set -euo pipefail
          candidates=(ios/App/build/*.ipa ios/App/*.ipa *.ipa)
          IPA=""
          for c in "${candidates[@]}"; do
            if [[ -f $c ]]; then
              echo "📦 Inspecting: $c"
              IPA="$c"
              break
            fi
          done
          [[ -z "$IPA" ]] && { echo "❌ No IPA found"; exit 1; }

          TMP=$(mktemp -d)
          unzip -q "$IPA" -d "$TMP"
          APP_PATH=$(/usr/bin/find "$TMP/Payload" -type d -name '*.app' -print -quit)
          [[ -z "$APP_PATH" ]] && { echo "❌ .app not found in IPA"; exit 1; }
          echo "🧩 App bundle: $APP_PATH"

          echo "== Check GoogleService-Info.plist =="
          if [[ ! -f "$APP_PATH/GoogleService-Info.plist" ]]; then
            echo "❌ GoogleService-Info.plist is missing from .app"
            /usr/bin/find "$APP_PATH" -name GoogleService-Info.plist | sed 's/^/ - /'
            exit 1
          fi
          /usr/bin/plutil -lint "$APP_PATH/GoogleService-Info.plist" || true
          /usr/libexec/PlistBuddy -c "Print :BUNDLE_ID" "$APP_PATH/GoogleService-Info.plist" || true

          echo "== Check aps-environment (entitlements & provisioning) =="
          /usr/bin/codesign -d --entitlements :- "$APP_PATH" > entitlements.plist
          /usr/libexec/PlistBuddy -c "Print :aps-environment" entitlements.plist
          /usr/bin/security cms -D -i "$APP_PATH/embedded.mobileprovision" > profile.plist
          /usr/libexec/PlistBuddy -c "Print :Entitlements:aps-environment" profile.plist

      - name: Upload IPA artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: |
            ios/App/build/*.ipa
            **/App.dSYM.zip
          if-no-files-found: warn
