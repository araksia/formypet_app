name: iOS CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  APP_BUNDLE_ID: gr.formypet.app
  BUILD_NUMBER: ${{ github.run_number }}

jobs:
  ios-build:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Ruby & Bundler
        working-directory: ios/App
        run: |
          gem install bundler -N
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4

      - name: CocoaPods install
        working-directory: ios/App
        run: |
          pod repo update
          pod install --repo-update

      - name: Fastlane release (TestFlight)
        working-directory: ios/App     # <<-- ΠΟΛΥ ΣΗΜΑΝΤΙΚΟ
        env:
          APP_BUNDLE_ID: ${{ env.APP_BUNDLE_ID }}
          BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BRANCH: main
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          # raw .p8 περιεχόμενο (ΟΧΙ base64), με \n όπως στο αρχείο:
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        run: bundle exec fastlane release

      - name: List outputs
        if: always()
        run: |
          echo "== ios/App/build =="
          ls -lah ios/App/build || true
          echo "== .ipa found =="
          find . -maxdepth 3 -name "*.ipa" -print || true

      - name: Dump latest gym/xcodebuild log on failure
        if: failure()
        run: |
          LOG=$(ls -t ~/Library/Logs/gym/*.log 2>/dev/null | head -n1 || true)
          if [[ -n "$LOG" ]]; then
            echo "== Showing last 300 lines of $LOG =="
            tail -n 300 "$LOG"
          else
            echo "No gym log found in ~/Library/Logs/gym"
          fi

      - name: Upload logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcode-gym-logs
          path: |
            ~/Library/Logs/gym/*.log
            ~/Library/Developer/Xcode/DerivedData/**/Logs/**/*.log
          if-no-files-found: ignore

      - name: Verify IPA & entitlements
        if: success()
        run: |
          set -euo pipefail
          candidates=(ios/App/build/*.ipa ios/App/*.ipa *.ipa)
          IPA=""
          for c in "${candidates[@]}"; do
            if [[ -f $c ]]; then
              echo "📦 Inspecting: $c"
              IPA="$c"
              break
            fi
          done
          [[ -z "$IPA" ]] && { echo "❌ No IPA found"; exit 1; }

          TMP=$(mktemp -d)
          unzip -q "$IPA" -d "$TMP"
          APP_PATH=$(/usr/bin/find "$TMP/Payload" -type d -name '*.app' -print -quit)
          [[ -z "$APP_PATH" ]] && { echo "❌ .app not found in IPA"; exit 1; }
          echo "🧩 App bundle: $APP_PATH"

          echo "== Check GoogleService-Info.plist =="
          if [[ ! -f "$APP_PATH/GoogleService-Info.plist" ]]; then
            echo "❌ GoogleService-Info.plist is missing from .app"
            /usr/bin/find "$APP_PATH" -name GoogleService-Info.plist | sed 's/^/ - /'
            exit 1
          fi
          /usr/bin/plutil -lint "$APP_PATH/GoogleService-Info.plist" || true
          /usr/libexec/PlistBuddy -c "Print :BUNDLE_ID" "$APP_PATH/GoogleService-Info.plist" || true

          echo "== Check aps-environment (entitlements & provisioning) =="
          /usr/bin/codesign -d --entitlements :- "$APP_PATH" > entitlements.plist
          /usr/libexec/PlistBuddy -c "Print :aps-environment" entitlements.plist
          /usr/bin/security cms -D -i "$APP_PATH/embedded.mobileprovision" > profile.plist
          /usr/libexec/PlistBuddy -c "Print :Entitlements:aps-environment" profile.plist
