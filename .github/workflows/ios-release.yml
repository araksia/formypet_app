name: iOS CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  APP_BUNDLE_ID: gr.formypet.app
  BUILD_NUMBER: ${{ github.run_number }}

jobs:
  ios-build:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # --- ΝΕΟ: Node & JS deps (στο root) ---
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Configure npm auth (optional for private registry)
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -n "$NPM_TOKEN" ]; then
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            echo "✅ npm auth configured"
          else
            echo "ℹ️ No NPM_TOKEN provided, skipping npm auth"
          fi

      - name: Install JS deps
        run: npm ci --no-audit --no-fund

      - name: Capacitor sync iOS
        run: npx cap sync ios

      - name: Sanity check pods_helpers exists
        run: |
          test -f node_modules/@capacitor/ios/scripts/pods_helpers.rb || {
            echo "❌ Missing pods_helpers.rb. Check Capacitor version or node_modules install.";
            ls -la node_modules/@capacitor/ios/scripts || true
            exit 1
          }

      # --- Ruby/Bundler & Pods στο ios/App ---
      - name: Ruby & Bundler
        working-directory: ios/App
        run: |
          gem install bundler -N
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4

      - name: CocoaPods install
        working-directory: ios/App
        run: |
          pod repo update
          pod install --repo-update

      - name: Fastlane release (TestFlight)
        working-directory: ios/App
        env:
          APP_BUNDLE_ID: ${{ env.APP_BUNDLE_ID }}
          BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BRANCH: main
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          # raw .p8 (ΟΧΙ base64)
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        run: bundle exec fastlane release

      - name: Dump gym log on failure
        if: failure()
        run: |
          LOG=$(ls -t ~/Library/Logs/gym/*.log 2>/dev/null | head -n1 || true)
          [[ -n "$LOG" ]] && tail -n 300 "$LOG" || echo "No gym log found"

      - name: Verify IPA & entitlements
        if: success()
        run: |
          set -euo pipefail
          candidates=(ios/App/build/*.ipa ios/App/*.ipa *.ipa)
          IPA=""
          for c in "${candidates[@]}"; do
            if [[ -f $c ]]; then
              echo "📦 Inspecting: $c"; IPA="$c"; break
            fi
          done
          [[ -z "$IPA" ]] && { echo "❌ No IPA found"; exit 1; }
          TMP=$(mktemp -d); unzip -q "$IPA" -d "$TMP"
          APP_PATH=$(/usr/bin/find "$TMP/Payload" -type d -name '*.app' -print -quit)
          [[ -z "$APP_PATH" ]] && { echo "❌ .app not found in IPA"; exit 1; }
          echo "🧩 App bundle: $APP_PATH"
          echo "== Check GoogleService-Info.plist =="
          [[ -f "$APP_PATH/GoogleService-Info.plist" ]] || { echo "❌ Missing GoogleService-Info.plist"; exit 1; }
          /usr/bin/plutil -lint "$APP_PATH/GoogleService-Info.plist" || true
          /usr/libexec/PlistBuddy -c "Print :BUNDLE_ID" "$APP_PATH/GoogleService-Info.plist" || true
          echo "== aps-environment =="
          /usr/bin/codesign -d --entitlements :- "$APP_PATH" > entitlements.plist
          /usr/libexec/PlistBuddy -c "Print :aps-environment" entitlements.plist || true
          /usr/bin/security cms -D -i "$APP_PATH/embedded.mobileprovision" > profile.plist
          /usr/libexec/PlistBuddy -c "Print :Entitlements:aps-environment" profile.plist || true
