name: iOS • Build & TestFlight

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  APP_BUNDLE_ID: gr.formypet.app
  BUILD_NUMBER: ${{ github.run_number }}

jobs:
  ios:
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # ---------- Node / Web assets ----------
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Node deps
        run: npm ci

      - name: Configure npm auth (optional)
        run: |
          if [ -n "${NPM_TOKEN:-}" ]; then
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build web assets
        run: npm run build

      - name: Verify webDir output
        run: |
          set -e
          if [ -d dist ] && [ -f dist/index.html ]; then
            echo "✅ dist ok"
          elif [ -d build ] && [ -f build/index.html ]; then
            echo "ℹ️ Using CRA build/ – φρόντισε στο capacitor.config.* webDir:\"build\""
          else
            echo "❌ Δεν βρέθηκαν web assets (dist/ ή build/ με index.html)"
            ls -la
            exit 1
          fi

      - name: Write GoogleService-Info.plist (if provided)
        run: |
          if [ -n "${IOS_GOOGLE_PLIST_B64:-}" ]; then
            mkdir -p ios/App/App ios/App/App/App
            echo "$IOS_GOOGLE_PLIST_B64" | base64 --decode > ios/App/App/GoogleService-Info.plist
            # Κάλυψε και το path που έχει το Xcode build phase αν είναι διπλό:
            cp ios/App/App/GoogleService-Info.plist ios/App/App/App/GoogleService-Info.plist || true
            echo "✅ Wrote GoogleService-Info.plist"
          else
            echo "ℹ️ No iOS GoogleService plist secret provided"
          fi
        env:
          IOS_GOOGLE_PLIST_B64: ${{ secrets.IOS_GOOGLE_SERVICE_INFO_PLIST_BASE64 }}

      - name: Capacitor sync iOS
        run: npx cap sync ios

      # ---------- Ruby / Fastlane ----------
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
          working-directory: ios/App

      - name: Fastlane release (build & upload)
        working-directory: ios/App
        env:
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BRANCH: main
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          # App Store Connect API (ΠΡΟΣΟΧΗ: RAW περιεχόμενο .p8, ΟΧΙ base64)
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}

          APP_BUNDLE_ID: ${{ env.APP_BUNDLE_ID }}
          BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
        run: bundle exec fastlane release

      # ---------- IPA inspection & artifacts ----------
      - name: Inspect IPA (optional)
        if: always()
        run: |
          set -euo pipefail
          candidates=(ios/App/build/*.ipa ios/App/*.ipa *.ipa)
          IPA=""
          for c in "${candidates[@]}"; do
            if [[ -f $c ]]; then
              echo "📦 Inspecting: $c"
              IPA="$c"
              break
            fi
          done
          [[ -z "$IPA" ]] && { echo "ℹ️ No IPA to inspect"; exit 0; }
          TMP=$(mktemp -d); unzip -q "$IPA" -d "$TMP"
          APP_PATH=$(/usr/bin/find "$TMP/Payload" -type d -name '*.app' -print -quit)
          echo "🧩 App bundle: $APP_PATH"
          echo "== GoogleService-Info.plist =="
          if [[ -f "$APP_PATH/GoogleService-Info.plist" ]]; then
            /usr/bin/plutil -lint "$APP_PATH/GoogleService-Info.plist" || true
          else
            echo "⚠️ Missing GoogleService-Info.plist in app bundle"
          fi
          echo "== aps-environment =="
          /usr/bin/codesign -d --entitlements :- "$APP_PATH" > entitlements.plist 2>/dev/null || true
          /usr/libexec/PlistBuddy -c "Print :aps-environment" entitlements.plist || true
          /usr/bin/security cms -D -i "$APP_PATH/embedded.mobileprovision" > profile.plist 2>/dev/null || true
          /usr/libexec/PlistBuddy -c "Print :Entitlements:aps-environment" profile.plist || true

      - name: Upload IPA artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: App-IPA
          path: |
            ios/App/build/*.ipa
            ios/App/*.ipa
            *.ipa
          if-no-files-found: ignore
