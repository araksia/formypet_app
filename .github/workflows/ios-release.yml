name: Build and Release iOS App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-release:
    name: Build and Release iOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm ci

      - name: Build Web Assets
        run: npm run build

      - name: Sync Capacitor iOS Project
        run: npx cap sync ios

      - name: Setup Ruby and Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: 'ios/App'

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'

      - name: Setup Keychain
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -l build.keychain
          security list-keychains -d user -s build.keychain

      - name: Install CocoaPods (via bundler) & Build + Upload
        working-directory: ios/App
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}            # <-- ΠΡΟΣΤΕΘΗΚΕ
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_APP_ID: ${{ secrets.APPLE_APP_ID }}                      # bundle id π.χ. com.company.app
          APPLE_ID_EMAIL: ${{ secrets.APPLE_ID_EMAIL }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_USERNAME: ${{ secrets.MATCH_GIT_USERNAME }}
          MATCH_GIT_TOKEN: ${{ secrets.MATCH_GIT_TOKEN }}
        run: |
          bundle install
          bundle exec pod install --repo-update

          echo "Pods installed. Proceeding with build..."
          bundle exec fastlane release
