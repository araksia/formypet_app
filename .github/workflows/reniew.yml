name: Bootstrap App Store Profile
on:
  workflow_dispatch: {}

jobs:
  bootstrap:
    runs-on: macos-14
    env:
      APP_BUNDLE_ID: gr.formypet.app
      TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_GIT_BRANCH: main

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Install fastlane
        working-directory: ios/App
        run: |
          bundle config set path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Start ssh-agent (match repo)
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.MATCH_SSH_PRIVATE_KEY }}

      - name: Known hosts & git identity
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global user.email "ci@github.actions"
          git config --global user.name "GitHub Actions"
          git ls-remote "$MATCH_GIT_URL" -h

      - name: Build asc_api_key.json (raw PEM or base64)
        working-directory: ios/App
        env:
          ASC_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          ASC_KEY_INPUT: ${{ secrets.APP_STORE_CONNECT_API_KEY_PEM }}
        run: |
          set -e
          if [ -z "$ASC_KEY_ID" ] || [ -z "$ASC_ISSUER_ID" ] || [ -z "$ASC_KEY_INPUT" ]; then
            echo "Missing APP_STORE_CONNECT_API_KEY_* secrets"; exit 1; fi

          # γράψε το secret σε αρχείο, αν δεν είναι PEM κάνε base64 decode
          printf "%s" "$ASC_KEY_INPUT" > key_input.txt
          if grep -q "BEGIN PRIVATE KEY" key_input.txt; then
            mv key_input.txt AuthKey.p8
          else
            base64 --decode key_input.txt > AuthKey.p8
          fi

          # OpenSSL έλεγχος καμπύλης (πρέπει να είναι prime256v1 / ES256)
          /usr/bin/openssl pkey -in AuthKey.p8 -noout -text > pem.txt 2>/dev/null || { echo "Invalid .p8"; exit 1; }
          CURVE=$(awk -F': ' '/ASN1 OID/ {print $2}' pem.txt | head -n1)
          echo "Curve: ${CURVE:-unknown}"
          if [ "$CURVE" != "prime256v1" ]; then
            echo "Wrong key type. Use App Store Connect API .p8 (ES256)."; exit 1; fi

          # φτιάξε το asc_api_key.json με Python one-liner (χωρίς heredoc)
          python3 -c 'import os,json; kid=os.environ["ASC_KEY_ID"]; iss=os.environ["ASC_ISSUER_ID"]; pem=open("AuthKey.p8","r",encoding="utf-8",errors="ignore").read(); 
if not pem.endswith("\n"): pem+="\n"; 
open("asc_api_key.json","w").write(json.dumps({"key_id":kid,"issuer_id":iss,"key":pem,"in_house":False}))'
          echo "APP_STORE_CONNECT_API_KEY_PATH=$PWD/asc_api_key.json" >> "$GITHUB_ENV"

      - name: Create temp keychain
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -lut 21600 build.keychain

      - name: Create/Update App Store provisioning
