name: Bootstrap Match Profiles
on:
  workflow_dispatch: {}

jobs:
  make-profiles:
    runs-on: macos-14
    env:
      APP_BUNDLE_ID: "gr.formypet.app"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"

      - name: Install fastlane (and deps)
        working-directory: ios/App
        run: |
          bundle config set path vendor/bundle
          bundle install --jobs 4 --retry 3

      # SSH access (Write) στο match repo
      - name: Start ssh-agent (for match repo)
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.MATCH_SSH_PRIVATE_KEY }}

      - name: Add github.com to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Configure git identity
        run: |
          git config --global user.email "ci@github.actions"
        run: |
          git config --global user.name "GitHub Actions"

      - name: Check access to match repo
        env:
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        run: |
          if [ -z "$MATCH_GIT_URL" ]; then echo "MATCH_GIT_URL is empty"; exit 1; fi
          git ls-remote "$MATCH_GIT_URL" -h

      # Φτιάχνουμε PEM (raw ή base64) -> OpenSSL validate -> asc_api_key.json (με jq ή python)
      - name: Build & validate ASC API key, then create JSON
        working-directory: ios/App
        env:
          ASC_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          ASC_KEY_SECRET: ${{ secrets.APP_STORE_CONNECT_API_KEY }}  # raw PEM ή base64
        run: |
          set -e
          if [ -z "$ASC_KEY_ID" ] || [ -z "$ASC_ISSUER_ID" ] || [ -z "$ASC_KEY_SECRET" ]; then
            echo "Missing APP_STORE_CONNECT_API_KEY_* secrets"; exit 1; fi

          # Γράψε PEM (raw ή base64)
          if printf '%s' "$ASC_KEY_SECRET" | grep -q "BEGIN PRIVATE KEY"; then
            printf '%s' "$ASC_KEY_SECRET" > AuthKey.p8
          else
            printf '%s' "$ASC_KEY_SECRET" | base64 --decode > AuthKey.p8
          fi

          echo "== PEM header/footer =="
          sed -n '1p;$p' AuthKey.p8

          echo "== OpenSSL check =="
          /usr/bin/openssl pkey -in AuthKey.p8 -noout -text | sed -n '1,12p' || { echo "Invalid PEM"; exit 1; }

          # Δημιούργησε asc_api_key.json
          if command -v jq >/dev/null 2>&1; then
            jq -n --arg kid "$ASC_KEY_ID" --arg iss "$ASC_ISSUER_ID" --rawfile k AuthKey.p8 \
              '{key_id:$kid, issuer_id:$iss, key:$k, in_house:false}' > asc_api_key.json
          else
            python3 -c 'import json,sys; kid,iss=sys.argv[1:3]; pem=open("AuthKey.p8","r",encoding="utf-8",errors="ignore").read(); print(json.dumps({"key_id":kid,"issuer_id":iss,"key":pem,"in_house":False}))' "$ASC_KEY_ID" "$ASC_ISSUER_ID" > asc_api_key.json
          fi
          test -s asc_api_key.json || { echo "asc_api_key.json empty"; exit 1; }

      - name: Ensure Matchfile has app_identifier
        working-directory: ios/App/fastlane
        env:
          APP_BUNDLE_ID: ${
