name: Bootstrap Match Profiles
on:
  workflow_dispatch: {}

jobs:
  make-profiles:
    runs-on: macos-14
    env:
      APP_BUNDLE_ID: gr.formypet.app
    steps:
      - uses: actions/checkout@v4

      # Ruby + fastlane
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Install fastlane (and deps)
        working-directory: ios/App
        run: |
          bundle config set path vendor/bundle
          bundle install --jobs 4 --retry 3

      # Patch Matchfile: βεβαιώσου ότι έχει app_identifier
      - name: Ensure Matchfile has app_identifier
        working-directory: ios/App/fastlane
        env:
          APP_BUNDLE_ID: ${{ env.APP_BUNDLE_ID }}
        run: |
          if grep -qE '^\s*app_identifier' Matchfile; then
            sed -i.bak -E "s#^\s*app_identifier.*#app_identifier([\"$APP_BUNDLE_ID\"])#g" Matchfile
          else
            printf '\napp_identifier(["%s"])\n' "$APP_BUNDLE_ID" >> Matchfile
          fi
          echo "== Matchfile ==" && cat Matchfile

      # SSH agent για match repo (Deploy key με WRITE)
      - name: Start ssh-agent (for match repo)
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.MATCH_SSH_PRIVATE_KEY }}

      - name: Add github.com to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Git identity (for commits to match repo)
        run: |
          git config --global user.email "ci@github.actions"
          git config --global user.name "GitHub Actions"

      - name: Check access to match repo
        env:
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}   # π.χ. git@github.com:ORG/match-repo.git
        run: |
          test -n "$MATCH_GIT_URL" || { echo "❌ MATCH_GIT_URL is empty"; exit 1; }
          git ls-remote "$MATCH_GIT_URL" -h

      # Προσθέτουμε ΠΡΟΣΩΡΙΝΟ lane μέσα στο κανονικό Fastfile
      - name: Append bootstrap lane to Fastfile
        working-directory: ios/App
        run: |
          FASTFILE="fastlane/Fastfile"
          echo "== Before (head) =="; head -n 30 "$FASTFILE" || true
          cat >> "$FASTFILE" <<'EOF'

# --- AUTO-ADDED BY CI: creates/refreshes profiles via API key ---
desc "Bootstrap provisioning profiles (appstore + development) using ASC API key"
lane :bootstrap_profiles do
  api_key = app_store_connect_api_key(
    key_id:      ENV['APP_STORE_CONNECT_API_KEY_ID'],
    issuer_id:   ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
    key_content: ENV['APP_STORE_CONNECT_API_KEY'],
    is_key_content_base64: true
  )
  match(
    type: "appstore",
    readonly: false,
    api_key: api_key,
    app_identifier: [ENV['APP_BUNDLE_ID']],
    team_id: ENV['APPLE_TEAM_ID']
  )
  match(
    type: "development",
    readonly: false,
    api_key: api_key,
    app_identifier: [ENV['APP_BUNDLE_ID']],
    team_id: ENV['APPLE_TEAM_ID']
  )
end
# --- END AUTO-ADDED BY CI ---
EOF
          echo "== After (tail) =="; tail -n 80 "$FASTFILE"

      # Τρέχουμε το lane -> θα δημιουργήσει/ανανεώσει profiles ΣΤΟ match repo
      - name: Create/Update profiles via API key
        working-directory: ios/App
        env:
          APP_BUNDLE_ID: ${{ env.APP_BUNDLE_ID }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BRANCH: main
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          # App Store Connect API key (πρέπει να έχει "Certificates, Identifiers & Profiles" access)
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }} # base64 .p8 content
        run: |
          bundle exec fastlane bootstrap_profiles
